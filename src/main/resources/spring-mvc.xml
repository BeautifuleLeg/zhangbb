<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                            http://www.springframework.org/schema/beans/spring-beans-4.1.xsd    
                            http://www.springframework.org/schema/context    
                            http://www.springframework.org/schema/context/spring-context-4.1.xsd    
                            http://www.springframework.org/schema/mvc    
                            http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
    <!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->  
    <!-- 排除了扫描@service的bean。如果不排除，这里由于web启动时，首先加载这个spring-mvc.xml文件，这时将生成一个没有事务的service实例注入到controller  -->
    
    <context:component-scan base-package="com.dnkx.controller" />  
    <!--避免IE执行AJAX时，返回JSON出现下载文件 -->  
   <!--  <bean id="mappingJacksonHttpMessageConverter"  
        class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">  
        <property name="supportedMediaTypes">  
            <list>  
                <value>text/html;charset=UTF-8</value>  
            </list>  
        </property>  
    </bean>   -->
    <!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->  
    <bean  
        class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">  
        <!-- <property name="messageConverters">  
            <list>  
                <ref bean="mappingJacksonHttpMessageConverter" /> JSON转换器  
            </list>  
        </property> -->  
    </bean>  
    <mvc:annotation-driven /> 
    <mvc:resources location="/jquery-easyui-1.5/" mapping="/jquery-easyui-1.5/**"/>
    <mvc:resources location="/image/" mapping="/image/**"/> 
	<mvc:resources location="/css/" mapping="/css/**"/> 
	<mvc:resources location="/js/" mapping="/js/**"/>
    
    <!-- 定义跳转的文件的前后缀 ，视图模式配置-->  
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">  
        <!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->  
        <property name="prefix" value="/" />  
        <property name="suffix" value=".jsp" />  
    </bean>  
      
    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->  
    <!-- <bean id="multipartResolver"    
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">    
        默认编码  
        <property name="defaultEncoding" value="utf-8" />    
        文件大小最大值  
        <property name="maxUploadSize" value="10485760000" />    
        内存中的最大值  
        <property name="maxInMemorySize" value="40960" />    
    </bean>    -->

    <!-- 启动对@AspectJ注解的支持 -->
    <!-- <aop:aspectj-autoproxy/> -->

    <aop:config>
        <!-- 定义切点 -->
        <aop:pointcut id="allServiceMethods" expression="execution(* com.dnkx.service.impl.*.*(..))"/>
        <!-- 植入切面通知(增强处理) -->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="allServiceMethods"/>
    </aop:config>

</beans>  